import { GridMetaDataType } from "components/dataTableStatic";
import { MasterDetailsMetaData } from "components/formcomponent/masterDetails/types";

export const documentMasterDetailsMetaData: MasterDetailsMetaData = {
  masterForm: {
    form: {
      name: "addChargeTemp",
      label: "Add Documents",
      resetFieldOnUnmount: false,
      validationRun: "onBlur",
      render: {
        ordering: "auto",
        renderType: "simple",
        gridConfig: {
          item: {
            xs: 12,
            sm: 4,
            md: 4,
          },
          container: {
            direction: "row",
            spacing: 1,
          },
        },
      },
    },
    fields: [],
  },
  detailsGrid: {
    gridConfig: {
      dense: true,
      gridLabel: "Service Charge Details",
      rowIdColumn: "SR_CD",
      defaultColumnConfig: { width: 150, maxWidth: 250, minWidth: 100 },
      allowColumnReordering: true,
      hideHeader: true,
      disableGroupBy: true,
      enablePagination: true,
      containerHeight: { min: "40vh", max: "40vh" },
      allowRowSelection: false,
      hiddenFlag: "_hidden",
      disableLoader: true,
    },
    columns: [
      {
        accessor: "id",
        columnName: "Sr.No.",
        sequence: 1,
        alignment: "right",
        componentType: "default",
        width: 70,
        minWidth: 60,
        maxWidth: 120,
        isAutoSequence: true,
      },
      {
        accessor: "DOCUMENT",
        columnName: "Document*",
        sequence: 2,
        alignment: "left",
        componentType: "editableSelect",
        // options: [{label: "label1", value: "value1"},{label: "label2", value: "value2"}],
      //   options: (dependentValue, formState, _, authState) => {
      //       console.log("fwezzzzfeqw", dependentValue, formState, _, authState)
      //       // API.getDocumentTypes({COMP_CD: COMP_CD, CONSTITUTION: CONSTITUTION, CUST_TYPE: CUST_TYPE})
      //   },
        options: [
          {label: "option1", value: "option1"},
          {label: "option2", value: "option2"},
          {label: "option3", value: "option3"},
        ],
        _optionsKey: "GetChargeTemplates",
        placeholder: "",
        width: 150,
        minWidth: 100,
        maxWidth: 250,
      },
      {
        accessor: "SUBMIT",
        columnName: "Submit",
        sequence: 3,
        alignment: "left",
        componentType: "editableCheckbox",
        placeholder: "",
        width: 100,
        minWidth: 150,
        maxWidth: 400,
      },
      {
        accessor: "DOCUMENT_NO",
        columnName: "Document No.",
        sequence: 4,
        alignment: "left",
        componentType: "editableTextField",
        placeholder: "",
        width: 200,
        minWidth: 100,
        maxWidth: 300,
        isReadOnly: true,
      },  
      {
        accessor: "VALID_TILL_DATE",
        columnName: "Valid till Date",
        sequence: 8,
        alignment: "left",
        componentType: "editableDatePicker",
        dateFormat: "dd/MM/yyyy",
        defaultValue: new Date(),
        // options: () => GeneralAPI.GetChargeTemplates(),
        // options: [{label: "label1", value: "value1"},{label: "label2", value: "value2"}],
        // _optionsKey: "GetChargeTemplates",
        // placeholder: "",
        width: 250,
        minWidth: 250,
        maxWidth: 400,
      },
      {
        accessor: "ENTERED_DATE",
        columnName: "Entered Date",
        sequence: 8,
        alignment: "left",
        componentType: "editableDatePicker",
        dateFormat: "dd/MM/yyyy",
        defaultValue: new Date(),
        placeholder: "",
        width: 250,
        minWidth: 250,
        maxWidth: 400,
      },
      {
        columnName: "",
        componentType: "buttonRowCell",
        accessor: "UPLOAD_FILE",
        sequence: 11,
        buttonLabel: "Upload",
        width: 250,
        minWidth: 250,
        maxWidth: 400,
        isVisible: false,
        __EDIT__: { isVisible: true },
      },
      {
        columnName: "Action",
        componentType: "deleteRowCell",
        accessor: "_hidden",
        sequence: 12,
        width: 250,
        minWidth: 250,
        maxWidth: 400,
        isVisible: false,
        __EDIT__: { isVisible: true }
      },
      
      // {
      //   accessor: "BTN",
      //   columnName: "Action",
      //   componentType: "buttonRowCell",
      //   sequence: 9,
      //   buttonLabel: "Upload",
      //   isVisible: true,
      //   width: 140,
      //   minWidth: 140,
      //   maxWidth: 200,
      //   __EDIT__: { isVisible: true },
      // },
      // {
      //   columnName: "",
      //   componentType: "deleteRowCell",
      //   accessor: "SPECIAL_AMOUNT",
      //   sequence: 10,
      //   buttonLabel: "Special Amount",
      //   isVisible: true,
      //   width: 140,
      //   minWidth: 140,
      //   maxWidth: 200,
      //   // __EDIT__: { isVisible: true },
      //   // __VIEW__: { isVisible: true },
      //   // __NEW__: { isVisible: true },
      // },
    ],
  },
};
