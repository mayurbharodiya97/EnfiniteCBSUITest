import { GridMetaDataType } from "components/dataTableStatic";
/* CHEQUE_ISSUE.TRAN_DT ,
			CHEQUE_ISSUE.SR_CD,
           CHEQUE_ISSUE.ACCT_TYPE ,
           CHEQUE_ISSUE.ACCT_CD ,
           CHEQUE_ISSUE.CHEQUE_FROM ,
           CASE WHEN EASY_BANK.SUB_NVL_CHAR(CHEQUE_ISSUE.AUTO_CHQBK_FLAG,'N') = 'N' THEN 'No' ELSE 'Yes' END AS AUTO_CHQBK_FLAG,
           CHEQUE_ISSUE.CHEQUE_TOTAL ,
           CHEQUE_ISSUE.CHEQUE_TO ,
           CHEQUE_ISSUE.AMOUNT ,
           CHEQUE_ISSUE.REMARKS ,
           CHEQUE_ISSUE.COMP_CD ,
           CHEQUE_ISSUE.BRANCH_CD ,
           CHEQUE_ISSUE.TRAN_CD ,
           CHEQUE_ISSUE.ENTERED_BY ,
           CHEQUE_ISSUE.CONFIRMED ,
           CHEQUE_ISSUE.VERIFIED_BY ,
           CHEQUE_ISSUE.MACHINE_NM ,
           CHEQUE_ISSUE.SERVICE_TAX ,
           CHEQUE_ISSUE.ENTERED_COMP_CD ,
				CHEQUE_ISSUE.REQUISITION_DT,
		     (CASE WHEN CHEQUE_ISSUE.CHARACTERISTICS = 'O' THEN 'Order' ELSE 'Bearer' END) CHARACTERISTICS,
              (CASE WHEN CHEQUE_ISSUE.PAYABLE_AT_PAR = 'Y' THEN 'Yes' ELSE 'No' END) PAYABLE_AT_PAR,
           CHEQUE_ISSUE.ENTERED_BRANCH_CD,
           (SELECT COUNT(0)
                FROM CHEQUE_ISSUE_USED 
               WHERE CHEQUE_ISSUE.COMP_CD = CHEQUE_ISSUE_USED.COMP_CD  AND  
                       CHEQUE_ISSUE.BRANCH_CD = CHEQUE_ISSUE_USED.BRANCH_CD  AND  
                       CHEQUE_ISSUE.ACCT_TYPE = CHEQUE_ISSUE_USED.ACCT_TYPE  AND  
                       CHEQUE_ISSUE.ACCT_CD = CHEQUE_ISSUE_USED.ACCT_CD  AND
                  CHEQUE_ISSUE_USED.CHEQUE_NO BETWEEN CHEQUE_ISSUE.CHEQUE_FROM AND  CHEQUE_ISSUE.CHEQUE_TO AND  
                        CHEQUE_ISSUE_USED.SR_CD = CHEQUE_ISSUE.SR_CD) CNT,
             CHEQUE_ISSUE.AUTO_CHQBK_PRINT_FLAG       */
export const ChequebookentryGridMetaData: GridMetaDataType = {
  gridConfig: {
    dense: true,
    gridLabel: "Cheque Book Issued",
    rowIdColumn: "id",
    defaultColumnConfig: {
      width: 150,
      maxWidth: 250,
      minWidth: 100,
    },
    allowColumnReordering: true,
    disableSorting: false,
    disableGroupBy: true,
    enablePagination: false,
    hideFooter: true,
    pageSizes: [10, 20, 30],
    defaultPageSize: 10,
    containerHeight: {
      min: "42vh",
      max: "45vh",
    },
    allowFilter: false,
    allowColumnHiding: false,
    allowRowSelection: false,
  },
  filters: [],
  columns: [
    {
      accessor: "SR_CD",
      columnName: "Sr.No.",
      sequence: 1,
      alignment: "right",
      componentType: "default",
      width: 70,
      minWidth: 70,
      maxWidth: 200,
      isAutoSequence: true,
    },
    {
      accessor: "TRAN_DT",
      columnName: "Issue Date",
      sequence: 2,
      componentType: "date",
      dateFormat: "dd/MM/yyyy",
      width: 120,
      minWidth: 100,
      maxWidth: 200,
    },

    {
      accessor: "CHEQUE_FROM",
      columnName: "From Chq. No.",
      sequence: 4,
      alignment: "left",
      componentType: "default",
      width: 120,
      minWidth: 100,
      maxWidth: 200,
      isVisible: true,
    },
    {
      accessor: "CHEQUE_TO",
      columnName: "To Chq. No.",
      sequence: 5,
      alignment: "left",
      componentType: "default",
      width: 120,
      minWidth: 150,
      maxWidth: 200,
    },
    {
      accessor: "CHEQUE_TOTAL",
      columnName: "No. Chq(s)",
      sequence: 6,
      alignment: "left",
      componentType: "default",
      width: 120,
      minWidth: 100,
      maxWidth: 400,
    },
    {
      accessor: "UNUSED_CHQ",
      columnName: "Unused Chq.",
      sequence: 6,
      alignment: "left",
      componentType: "default",
      width: 120,
      minWidth: 100,
      maxWidth: 400,
    },
    {
      accessor: "AMOUNT",
      columnName: "Charge",
      sequence: 7,
      alignment: "left",
      componentType: "default",
      width: 120,
      minWidth: 120,
      maxWidth: 250,
    },
    {
      accessor: "SERVICE_TAX",
      columnName: "GST",
      sequence: 8,
      alignment: "left",
      componentType: "default",
      width: 120,
      minWidth: 100,
      maxWidth: 200,
    },
    {
      accessor: "REMARKS",
      columnName: "Remarks",
      sequence: 9,
      alignment: "left",
      componentType: "default",
      width: 150,
      minWidth: 100,
      maxWidth: 200,
    },
    {
      accessor: "CHARACTERISTICS",
      columnName: "Characteristics",
      sequence: 10,
      alignment: "left",
      componentType: "default",
      width: 120,
      minWidth: 100,
      maxWidth: 200,
      // color: (value) => {
      //   if ((value || "unlock").toLowerCase() === "unlock") {
      //     return "green";
      //   }
      //   return "red";
      // },
    },
    {
      accessor: "PAYABLE_AT_PAR",
      columnName: "At PAR",
      sequence: 9,
      alignment: "left",
      componentType: "default",
      width: 120,
      minWidth: 100,
      maxWidth: 200,
    },
    {
      accessor: "REQUISITION_DT",
      columnName: "Requisition Date",
      sequence: 10,
      alignment: "left",
      componentType: "date",
      dateFormat: "dd/MM/yyyy",
      width: 150,
      minWidth: 100,
      maxWidth: 200,
    },
    {
      accessor: "AUTO_CHQBK_FLAG",
      columnName: "Auto Issue",
      sequence: 10,
      alignment: "right",
      componentType: "default",
      width: 100,
      minWidth: 70,
      maxWidth: 200,
    },

    {
      accessor: "email",
      columnName: "E-Mail ID",
      sequence: 21,
      alignment: "left",
      componentType: "default",
      width: 150,
      minWidth: 100,
      maxWidth: 400,
    },
  ],
};
