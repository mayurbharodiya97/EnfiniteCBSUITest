export const ChecklistDetailsEditViewMetadata = {
  form: {
    name: "editChecklistDetail",
    label: "Edit Checklist Details",
    resetFieldOnUnmount: false,
    validationRun: "onBlur",
    render: {
      ordering: "auto",
      renderType: "simple",
      gridConfig: {
        item: {
          xs: 12,
          sm: 12,
          md: 12,
        },
        container: {
          direction: "row",
          spacing: 2,
        },
      },
    },
  },
  fields: [
    {
      render: { componentType: "hidden" },
      name: "serialNo",
    },
    {
      render: { componentType: "amountField" },
      name: "minAmount",
      label: "Minimum Amount",
      placeholder: "Enter Minimum Amount",
      required: true,
      validate: "getValidateValue",
      GridProps: { xs: 12, sm: 3, md: 3 },
    },
    {
      render: { componentType: "amountField" },
      name: "maxAmount",
      label: "Maximum Amount",
      placeholder: "Enter Maximum Amount",
      required: true,
      validate: "getValidateValue",
      GridProps: { xs: 12, sm: 3, md: 3 },
    },
    {
      render: { componentType: "amountField" },
      name: "fromLimitAmount",
      label: "From Amount",
      placeholder: "Enter From Amount",
      required: true,
      validate: "getValidateValue",
      GridProps: { xs: 12, sm: 3, md: 3 },
    },
    {
      render: { componentType: "amountField" },
      name: "toLimitAmount",
      label: "To Amount",
      placeholder: "Enter TO Amount",
      required: true,
      validate: "getValidateValue",
      GridProps: { xs: 12, sm: 3, md: 3 },
    },
    {
      render: { componentType: "amountField" },
      name: "chargeAmount",
      label: "Charge Amount",
      placeholder: "Enter TO Amount",
      required: true,
      validate: "getValidateValue",
      GridProps: { xs: 12, sm: 3, md: 3 },
    },
    {
      render: { componentType: "amountField" },
      name: "chargePercentage",
      label: "Charge Percent",
      placeholder: "Enter TO Amount",
      required: true,
      validate: "getValidateValue",
      GridProps: { xs: 12, sm: 3, md: 3 },
    },
    {
      render: { componentType: "select" },
      name: "compareOrAdd",
      label: "Compute",
      defaultValue: "00",
      validate: "getValidateValue",
      required: true,
      //options: "getRiskWeightage",
      fullWidth: true,
      GridProps: { xs: 12, sm: 3, md: 3 },
      options: [
        { label: "COMPARE MAX", value: "M" },
        { label: "COMPARE MIN", value: "N" },
        { label: "ADD", value: "A" },
      ],
    },
    // {
    //   render: { componentType: "checkbox" },
    //   name: "active",
    //   label: "Active",
    //   fullWidth: true,
    // },
  ],
};
