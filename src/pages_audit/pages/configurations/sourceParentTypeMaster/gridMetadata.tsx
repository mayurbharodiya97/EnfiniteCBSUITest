import { GridMetaDataType } from "components/dataTableStatic";
export const SourceParentGridMetaData: GridMetaDataType = {
  gridConfig: {
    dense: true,
    gridLabel: "Source Parent Type Master",
    rowIdColumn: "TRAN_CD",
    defaultColumnConfig: {
      width: 400,
      maxWidth: 450,
      minWidth: 300,
    },
    allowColumnReordering: true,
    disableSorting: false,
    hideHeader: false,
    disableGroupBy: true,
    enablePagination: false,
    pageSizes: [20, 30, 40],
    defaultPageSize: 20,
    containerHeight: {
      min: "68vh",
      max: "68vh",
    },
    allowFilter: false,
    allowColumnHiding: false,
    allowRowSelection: false,
    isCusrsorFocused: true,
    hiddenFlag: "_hidden",
    disableLoader: true,
  },
  filters: [
    {
      accessor: "id",
      columnName: "Sr. No.",
      filterComponentType: "valueFilter",
      gridProps: {
        xs: 12,
        md: 12,
        sm: 12,
      },
    },
  ],
  columns: [
    {
      accessor: "id1",
      columnName: "Sr. No.",
      sequence: 1,
      alignment: "left",
      componentType: "default",
      width: 70,
      minWidth: 60,
      maxWidth: 100,
      isAutoSequence: true,
    },
    {
      accessor: "SOURCE",
      columnName: "Source Name",
      sequence: 2,
      alignment: "left",
      componentType: "editableTextField",
      placeholder: "",
      width: 120,
      minWidth: 120,
      maxWidth: 400,
      schemaValidation: {
        type: "string",
        rules: [{ name: "required", params: ["This field is required"] }],
      },
    },
    {
      accessor: "SOURCE_TYPE",
      columnName: "Source Type",
      sequence: 3,
      alignment: "left",
      componentType: "editableTextField",
      placeholder: "",
      width: 100,
      minWidth: 100,
      maxWidth: 400,
      schemaValidation: {
        type: "string",
        rules: [{ name: "required", params: ["This field is required"] }],
      },
    },
    {
      accessor: "PARENT_TYPE",
      columnName: "Parent Type",
      sequence: 4,
      alignment: "left",
      componentType: "editableTextField",
      placeholder: "",
      width: 200,
      minWidth: 150,
      maxWidth: 400,
      schemaValidation: {
        type: "string",
        rules: [{ name: "required", params: ["This field is required"] }],
      },
    },
    {
      accessor: "DESCRIPTION",
      columnName: "Description",
      sequence: 5,
      alignment: "left",
      componentType: "editableTextField",
      placeholder: "",
      width: 250,
      minWidth: 150,
      maxWidth: 400,
      schemaValidation: {
        type: "string",
        rules: [{ name: "required", params: ["This field is required"] }],
      },
    },
    {
      accessor: "SINGUP_ALLOW",
      columnName: "SignUp Allow",
      sequence: 6,
      alignment: "left",
      componentType: "editableSelect",
      placeholder: "",
      width: 130,
      minWidth: 100,
      maxWidth: 200,
      options: [
        { label: "Allow", value: "Y" },
        { label: "Disallow", value: "N" },
      ],
      schemaValidation: {
        type: "string",
        rules: [{ name: "required", params: ["This field is required"] }],
      },
    },
    {
      accessor: "BENF_ALLOW",
      columnName: "Beneficiary Allow",
      sequence: 7,
      alignment: "left",
      componentType: "editableSelect",
      placeholder: "",
      width: 130,
      minWidth: 100,
      maxWidth: 200,
      options: [
        { label: "Allow", value: "Y" },
        { label: "Disallow", value: "N" },
      ],
      schemaValidation: {
        type: "string",
        rules: [{ name: "required", params: ["This field is required"] }],
      },
    },
    {
      accessor: "DISPLAY_ORDER",
      columnName: "Display Order",
      sequence: 8,
      alignment: "left",
      componentType: "editableNumberFormat",
      width: 100,
      minWidth: 60,
      maxWidth: 100,
      isAutoSequence: true,
    },
  ],
};
